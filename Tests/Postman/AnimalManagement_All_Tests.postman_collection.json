{
	"info": {
		"_postman_id": "920a6f91-e711-413d-b9a3-74b84460cfe7",
		"name": "AnimalManagement_All_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users - scenario 1",
			"item": [
				{
					"name": "User registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Rejestracja przebiegła pomyślnie!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(1000, 9000);\r",
									"const email = \"user\" + random_number + \"@example.com\";\r",
									"\r",
									"const random_password = _.random(100000,9000000);\r",
									"const password = random_password + \"@\";\r",
									"\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"pm.collectionVariables.set(\"password\", password);\r",
									"\r",
									"let genders = [\"Kobieta\", \"Mężczyzna\" ]; \r",
									"const random_gender = _.random(0, 1)\r",
									"const gender = genders[random_gender]\r",
									"\r",
									"pm.environment.set(\"gender\", gender);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userEmail\": \"{{email}}\",\r\n    \"userPassword\": \"{{password}}\",\r\n    \"confirmPassword\": \"{{password}}\",\r\n    \"userGender\": \"{{gender}}\",\r\n    \"userVerification\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/register",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "User login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"\r",
									"let bodyData = JSON.parse(responseBody);\r",
									"const token = bodyData.Token;\r",
									"pm.collectionVariables.set(\"token\", token);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userEmail\": \"{{email}}\",\r\n    \"userPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change user e-mail adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(1000, 9000);\r",
									"const new_email = \"user\" + random_number + \"@example.com\";\r",
									"\r",
									"pm.environment.set(\"new_email\", new_email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Twój adress e-mail został zaktualizowany!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldUserEmailAdress\": \"{{email}}\",\r\n    \"newUserEmailAdress\": \"{{new_email}}\",\r\n    \"userPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/changeAdressEmail",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"changeAdressEmail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleted user account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userPassword\":\"mmmmmm@\",\r\n    \"confirmPassword\":\"mmmmmm@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/deleteAccount",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"deleteAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change user password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_password = _.random(100000,9000000);\r",
									"const new_password = random_password + \"@\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_password\", new_password);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldUserPassword\":\"{{password}}\",\r\n    \"newUserPassword\":\"{{new_password}}\",\r\n    \"confirmNewPassword\":\"{{new_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/changePassword",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"changePassword"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Herds - scenario 1",
			"item": [
				{
					"name": "Add new herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Nowa hodowla została dodana!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(1, 9000);\r",
									"const name_of_herd = \"herd\" + random_number + \"example\";\r",
									"\r",
									"const herds_type = [\"Kura\",\"Królik\",\"Świnia\"]\r",
									"const random_number_for_type_of_herd = _.random(1, 2);\r",
									"const type_of_herd = herds_type[random_number_for_type_of_herd];\r",
									"\r",
									"const take_date = new Date();\r",
									"const date = take_date.getFullYear() + \"-\" + (\"0\" + (take_date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + take_date.getDate()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"name_of_herd\", name_of_herd);\r",
									"pm.collectionVariables.set(\"type_of_herd\", type_of_herd);\r",
									"pm.collectionVariables.set(\"date\", date);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{name_of_herd}}\", \r\n    \"herdType\": \"{{type_of_herd}}\",\r\n    \"creationDate\": \"{{date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/addNewHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"addNewHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all herds for user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY4ZWI3M2Q0LTljNTMtNDI2ZS1iZGNkLTJkOWQzMmNmYjJiMiIsImlkVHlwZU9mVXNlclJvbGUiOiI3MWEyN2RhYi04NmFhLTQ1YjAtOWQyMS03ZDRkMTllOTZkNDQiLCJuYW1lIjoiSG9kb3djYSIsImlhdCI6MTYwNzE2OTk0NCwiZXhwIjoxNjA3Mjk5NTQ0fQ.OK4uCoZc7NZVkFF8bo-jj4_kP1LhQcRZCEQqfjLgURw",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/findAllHerds",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"findAllHerds"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find herd by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/findHerdByName/:name",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"findHerdByName",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "{{name_of_herd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find herd by animal type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/findHerdByAnimalType/:typeOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"findHerdByAnimalType",
								":typeOfAnimal"
							],
							"variable": [
								{
									"key": "typeOfAnimal",
									"value": "{{type_of_herd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change herd name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(1, 9000);\r",
									"const new_name_of_herd = \"herd\" + random_number + \"example\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_name_of_herd\", new_name_of_herd);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Nazwa hodowli została zaktualizowana!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldHerdName\": \"{{name_of_herd}}\",\r\n    \"newHerdName\": \"{{new_name_of_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/changeHerdName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"changeHerdName"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change type of herd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const herds_type = [\"Kura\",\"Królik\",\"Świnia\"]\r",
									"const random_number_for_type_of_herd = _.random(0, 2);\r",
									"const new_type_of_herd = herds_type[random_number_for_type_of_herd];\r",
									"console.log(new_type_of_herd)\r",
									"pm.environment.set(\"new_type_of_herd\",new_type_of_herd)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie zaktualizowano typ zwierząt w hodowli!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfHerd\": \"{{new_type_of_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/changeTypeofHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"changeTypeofHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(1,100);\r",
									"const random_name = \"herd\" + random_number + \"example\";\r",
									"\r",
									"pm.environment.set(\"random_name\", random_name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{random_name}}\",\r\n    \"userPassword\": \"{{password}}\",\r\n    \"confirmPassword\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/herds/deleteHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"herds",
								"deleteHerd"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Animals - scenario 1",
			"item": [
				{
					"name": "Take all genders of animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllAnimalsGenders",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllAnimalsGenders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all kinds of animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllKindsOfAnimals",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllKindsOfAnimals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all join type to the herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllJoinTypeToTheHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllJoinTypeToTheHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Zwierzę zostało dodane pomyślnie!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(0,10000);\r",
									"\r",
									"const join_type_name_array = [\"Inny\", \"Urodzony w hodowli\", \"Kupiony\"]\r",
									"const random_number_for_join_type_name = _.random(0, 2);\r",
									"\r",
									"const kinds_of_animal_array = [\"Kura\"]\r",
									"\r",
									"const animal_genders_array = [\"Samiec\", \"Samica\"];\r",
									"const random_gender = _.random(0,1);\r",
									"\r",
									"const identityNumberOfAnimal = random_number;\r",
									"\r",
									"const breeds_of_animal_array = [\"Nioska\"];\r",
									"\r",
									"const animal_weight = _.random(1, 20);\r",
									"\r",
									"const join_type = join_type_name_array[random_number_for_join_type_name];\r",
									"const animal_gender = animal_genders_array[random_gender];\r",
									"\r",
									"pm.collectionVariables.set(\"join_type\", join_type);\r",
									"pm.collectionVariables.set(\"kinds_of_animal_array\", kinds_of_animal_array);\r",
									"pm.collectionVariables.set(\"animal_gender\", animal_gender);\r",
									"pm.collectionVariables.set(\"identityNumberOfAnimal\", identityNumberOfAnimal);\r",
									"pm.collectionVariables.set(\"breeds_of_animal_array\", breeds_of_animal_array);\r",
									"pm.collectionVariables.set(\"animal_weight\", animal_weight);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"joinTypeName\": \"{{join_type}}\",\r\n    \"kindOfAnimalName\": \"{{kinds_of_animal_array}}\",\r\n    \"animalGender\": \"{{animal_gender}}\",\r\n    \"identityNumberOfAnimal\": \"{{identityNumberOfAnimal}}\",\r\n    \"breedOfAnimal\": \"{{breeds_of_animal_array}}\",\r\n    \"dateOfJoinToTheHerd\": \"{{date}}\",\r\n    \"birthDate\": \"{{date}}\",\r\n    \"animalWeight\": \"{{animal_weight}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/addNewAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"addNewAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all animals in herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/findAllAnimalsInHerd/:herdName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"findAllAnimalsInHerd",
								":herdName"
							],
							"variable": [
								{
									"key": "herdName",
									"value": "{{new_name_of_herd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit identity number of animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(0,10000);\r",
									"\r",
									"const new_identityNumberOfAnimal = random_number;\r",
									"\r",
									"pm.collectionVariables.set(\"new_identityNumberOfAnimal\", new_identityNumberOfAnimal);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"oldIdentityNumberOfAnimal\": \"{{identityNumberOfAnimal}}\",\r\n    \"newIdentityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editIdentityNumberOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editIdentityNumberOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find animal by identity number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/findOneAnimalInHerd/:herdName/:identityNumber",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"findOneAnimalInHerd",
								":herdName",
								":identityNumber"
							],
							"variable": [
								{
									"key": "herdName",
									"value": "{{new_name_of_herd}}"
								},
								{
									"key": "identityNumber",
									"value": "{{new_identityNumberOfAnimal}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit breed of animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_breeds_of_animal_array = [\"Brojler\"];\r",
									"\r",
									"pm.collectionVariables.set(\"new_breeds_of_animal_array\", new_breeds_of_animal_array);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"oldBreedOfAnimal\": \"{{breeds_of_animal_array}}\",\r\n    \"newBreedOfAnimal\": \"{{new_breeds_of_animal_array}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editBreedOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editBreedOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit birth date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const take_date = new Date();\r",
									"const new_date = take_date.getFullYear() + \"-\" + (\"0\" + (take_date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + take_date.getDate()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"new_date\", new_date);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"oldBirthDate\": \"{{date}}\",\r\n    \"newBirthDate\": \"{{new_date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editBirthDate",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editBirthDate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit animal weight",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_animal_weight = _.random(1, 20);\r",
									"\r",
									"pm.collectionVariables.set(\"new_animal_weight\", new_animal_weight);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"oldAnimalWeight\": \"{{animal_weight}}\",\r\n    \"newAnimalWeight\": \"{{new_animal_weight}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editAnimalWeight",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editAnimalWeight"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new born animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano nowo narodzone zwierzę!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const temporary_identity_number = _.random(1,10000);\r",
									"\r",
									"const take_date = new Date();\r",
									"const newborn_animal_birth_date = take_date.getFullYear() + \"-\" + (\"0\" + (take_date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + take_date.getDate()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"newborn_animal_birth_date\", newborn_animal_birth_date);\r",
									"pm.collectionVariables.set(\"temporary_identity_number\", temporary_identity_number);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"kindOfAnimalName\": \"{{kinds_of_animal_array}}\",\r\n    \"parentIdentityNumber\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"birthDate\": \"{{newborn_animal_birth_date}}\",\r\n    \"temporaryIdentityNumberOfAnimal\": \"{{temporary_identity_number}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/addNewBornAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"addNewBornAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit new born animal birth date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const take_date = new Date();\r",
									"const new_newborn_animal_birth_date = take_date.getFullYear() + \"-\" + (\"0\" + (take_date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + take_date.getDate()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"new_newborn_animal_birth_date\", new_newborn_animal_birth_date);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"animalChildIdentityNumberOfAnimal\": \"{{temporary_identity_number}}\",\r\n    \"oldBirthDate\": \"{{newborn_animal_birth_date}}\",\r\n    \"newBirthDate\": \"{{new_newborn_animal_birth_date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editNewBornAnimalBirthDate",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editNewBornAnimalBirthDate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all new born animals in herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllNewBornAnimalsInHerd/:herdName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllNewBornAnimalsInHerd",
								":herdName"
							],
							"variable": [
								{
									"key": "herdName",
									"value": "{{new_name_of_herd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all reasons of deaths",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllReasonsDeaths",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllReasonsDeaths"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new dead animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano nowe zmarłe zwierzę!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const reasons_of_deaths_array = [\"Ubój\", \"Choroba\", \"Przyczyna naturalna\"];\r",
									"const random_number = _.random(0,2);\r",
									"\r",
									"const description_of_death = \"A kto umarł ten nie żyje.\"\r",
									"\r",
									"const reason_of_death = reasons_of_deaths_array[random_number];\r",
									"\r",
									"pm.collectionVariables.set(\"reason_of_death\", reason_of_death);\r",
									"pm.collectionVariables.set(\"description_of_death\", description_of_death);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"dateOfDeath\": \"{{date}}\",\r\n    \"reasonDeath\": \"{{reason_of_death}}\",\r\n    \"description\": \"{{description_of_death}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/addNewDeadAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"addNewDeadAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all deads animals in herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/takeAllDeadsAnimalsInHerd/:herdName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"takeAllDeadsAnimalsInHerd",
								":herdName"
							],
							"variable": [
								{
									"key": "herdName",
									"value": "{{new_name_of_herd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit new dead animal identity number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random_number = _.random(0,10000);\r",
									"\r",
									"const new_dead_animal_identityNumberOfAnimal = random_number;\r",
									"\r",
									"pm.collectionVariables.set(\"new_dead_animal_identityNumberOfAnimal\", new_dead_animal_identityNumberOfAnimal);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"oldIdentityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"newIdentityNumberOfAnimal\": \"{{new_dead_animal_identityNumberOfAnimal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editNewDeadAnimalIdentityNumber",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editNewDeadAnimalIdentityNumber"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit new dead animal date of death",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_dead_animal_identityNumberOfAnimal}}\",\r\n    \"oldDate\": \"{{date}}\",\r\n    \"newDate\": \"{{new_date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/editNewDeadAnimalDateOfDeath",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"editNewDeadAnimalDateOfDeath"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Zwierzę zostało trwale usunięte ze stada!\");\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\",\r\n    \"confirmIdentityNumberOfAnimal\": \"{{new_identityNumberOfAnimal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/deleteAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"deleteAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new born animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Młode zwierzę zostało trwale usunięte!\");\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"temporaryIdentityNumberOfAnimal\": \"{{temporary_identity_number}}\",\r\n    \"confirmTemporaryIdentityNumberOfAnimal\": \"{{temporary_identity_number}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/deleteNewBornAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"deleteNewBornAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete dead animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Zmarłe zwierzę zostało trwale usunięte!\");\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfAnimal\": \"{{new_dead_animal_identityNumberOfAnimal}}\",\r\n    \"confirmIdentityNumberOfAnimal\": \"{{new_dead_animal_identityNumberOfAnimal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/animals/deleteDeadAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"animals",
								"deleteDeadAnimal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Food - scenario 1",
			"item": [
				{
					"name": "Take all species of foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/takeAllSpeciesOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"takeAllSpeciesOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano zakupione pożywienie!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const identity_number_of_purchased_food = _.random(0,10000);\r",
									"const quantity_of_food = 200;\r",
									"\r",
									"const species_name_array = [\"Przenica\", \"Marchewka\"]\r",
									"const random_number = _.random(0,1);\r",
									"\r",
									"const species_name = species_name_array[random_number];\r",
									"\r",
									"const take_date = new Date();\r",
									"const date_of_purchased_food = take_date.getFullYear() + \"-\" + (\"0\" + (take_date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + take_date.getDate()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"identity_number_of_purchased_food\", identity_number_of_purchased_food);\r",
									"pm.collectionVariables.set(\"species_name\", species_name);\r",
									"pm.collectionVariables.set(\"quantity_of_food\", quantity_of_food);\r",
									"pm.collectionVariables.set(\"date_of_purchased_food\", date_of_purchased_food);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"speciesOfFoodName\": \"{{species_name}}\",\r\n    \"quantityOfFood\": \"{{quantity_of_food}}\",\r\n    \"dateOfPurchasedFood\": \"{{date_of_purchased_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/addNewFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"addNewFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take food status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/takeFoodStatus",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"takeFoodStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take food status by its species",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/takeFoodStatusByItsSpecies/:speciesName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"takeFoodStatusByItsSpecies",
								":speciesName"
							],
							"variable": [
								{
									"key": "speciesName",
									"value": "{{species_name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit species of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie zmieniono gatunek pożywienia!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_species_of_feed_array = [\"Burak\", \"Żyto\"]\r",
									"const random_number = _.random(0,1);\r",
									"\r",
									"const new_species_of_feed = new_species_of_feed_array[random_number];\r",
									"\r",
									"pm.collectionVariables.set(\"new_species_of_feed\",new_species_of_feed);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"speciesOfFoodName\": \"{{new_species_of_feed}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/editSpeciesOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"editSpeciesOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit quantity of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie zaktualizowano ilość zakupionego pokarmu!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_quantity_of_food = 100;\r",
									"\r",
									"pm.collectionVariables.set(\"new_quantity_of_food\", new_quantity_of_food);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"quantityOfFood\": \"{{new_quantity_of_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/editQuantityOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"editQuantityOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit date of purchased food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Data została zaktualizowana!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const take_new_date = new Date();\r",
									"const new_date_of_purchased_food = take_new_date.getFullYear() + \"-\" + (\"0\" + (take_new_date.getMonth() + 2)).slice(-2) + \"-\" + (\"0\" + take_new_date.getDate()).slice(-2);\r",
									"\r",
									"pm.environment.set(\"new_date_of_purchased_food\", new_date_of_purchased_food);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"oldDate\": \"{{date_of_purchased_food}}\",\r\n    \"newDate\": \"{{new_date_of_purchased_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/editDateOfPurchasedFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"editDateOfPurchasedFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign food to herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Udało się przypisać pożywienie do stada!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const identity_number_of_food_used_for_herd = _.random(0,10000);\r",
									"const quantity_of_food_used_for_herd = 50;\r",
									"\r",
									"pm.collectionVariables.set(\"identity_number_of_food_used_for_herd\", identity_number_of_food_used_for_herd);\r",
									"pm.collectionVariables.set(\"quantity_of_food_used_for_herd\", quantity_of_food_used_for_herd);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"identityNumberOfFoodUsedForHerd\": \"{{identity_number_of_food_used_for_herd}}\",\r\n    \"quantityOfFoodUsedForHerd\": \"{{quantity_of_food_used_for_herd}}\",\r\n    \"dateWhenFoodWasUsed\": \"{{date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/assignFoodToHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"assignFoodToHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take food status in herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/takeFoodStatusInHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"takeFoodStatusInHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take food status in herd by its species",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/takeFoodStatusInHerdByItsSpecies/:speciesName",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"takeFoodStatusInHerdByItsSpecies",
								":speciesName"
							],
							"variable": [
								{
									"key": "speciesName",
									"value": "{{new_species_of_feed}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit quantity of food used for animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Ilość wykorzystywanego pożywienia dla stada została zaktualizowana!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_quantity_of_food_used_for_herd = 60;\r",
									"\r",
									"pm.environment.set(\"new_quantity_of_food_used_for_herd\", new_quantity_of_food_used_for_herd);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\",\r\n    \"newQuantityOfFoodUsedForHerd\": \"{{new_quantity_of_food_used_for_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/editQuantityOfFoodUsedForAnimals",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"editQuantityOfFoodUsedForAnimals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit date when user used food for herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Data została zmieniona pomyślnie!\");\r",
									"});\r",
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const take_new_date = new Date();\r",
									"const new_date_of_food_used_for_herd = take_new_date.getFullYear() + \"-\" + (\"0\" + (take_new_date.getMonth() + 2)).slice(-2) + \"-\" + (\"0\" + take_new_date.getDate()).slice(-2);\r",
									"\r",
									"pm.environment.set(\"new_date_of_food_used_for_herd\", new_date_of_food_used_for_herd);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"herdName\": \"{{new_name_of_herd}}\",\r\n    \"identityNumberOfFoodUsedForHerd\": \"{{identity_number_of_food_used_for_herd}}\",\r\n    \"oldDate\": \"{{date}}\",\r\n    \"newDate\": \"{{new_date_of_food_used_for_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/editDateWhenUserUsedFoodForHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"editDateWhenUserUsedFoodForHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchased food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfPurchasedFood\": \"{{identity_number_of_purchased_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/deletePurchasedFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"deletePurchasedFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete food used for herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identityNumberOfFoodUsedForHerd\": \"{{identity_number_of_food_used_for_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/foods/deleteFoodUsedForHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"foods",
								"deleteFoodUsedForHerd"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Administrators - scenario 1",
			"item": [
				{
					"name": "Administrator login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"\r",
									"let bodyData = JSON.parse(responseBody);\r",
									"const administrator_token = bodyData.Token;\r",
									"pm.collectionVariables.set(\"administrator_token\", administrator_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const administrator_email = \"administrator@example.com\";\r",
									"const administrator_password = \"administrator@\";\r",
									"\r",
									"pm.environment.set(\"administrator_email\", administrator_email);\r",
									"pm.environment.set(\"administrator_password\", administrator_password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userEmail\": \"{{administrator_email}}\",\r\n    \"userPassword\": \"{{administrator_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/users/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all types of animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/takeAllTypesOfAnimals",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"takeAllTypesOfAnimals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new type of animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie utworzono nowy typ zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_type_of_animal = \"Dzikie\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_type_of_animal\", new_type_of_animal);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfAnimal\": \"{{new_type_of_animal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewTypeOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewTypeOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete type of animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany typ zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfAnimal\": \"{{new_type_of_animal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteTypeOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteTypeOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new kind of animal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const type_of_animal = \"Drób\";\r",
									"const new_kind_of_animal = \"Kaczka\";\r",
									"\r",
									"pm.collectionVariables.set(\"type_of_animal\", type_of_animal);\r",
									"pm.collectionVariables.set(\"new_kind_of_animal\", new_kind_of_animal);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie utworzono nowy rodzaj zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfAnimal\": \"{{type_of_animal}}\",\r\n    \"newKindOfAnimal\": \"{{new_kind_of_animal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewKindOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewKindOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete kind of animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany rodzaj zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"kindOfAnimal\": \"{{new_kind_of_animal}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteKindOfAnimal",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteKindOfAnimal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all types of foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/takeAllTypesOfFoods",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"takeAllTypesOfFoods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new type of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie utworzono nowy typ pożywienia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_type_of_food = \"Sianokos\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_type_of_food\", new_type_of_food);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfFood\": \"{{new_type_of_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewTypeOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewTypeOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete type of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany typ pożywienia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfFood\": \"{{new_type_of_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteTypeOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteTypeOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new species of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie utworzono nowy gatunek pożywienia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const type_of_food = \"Zboże\";\r",
									"const new_species_of_food = \"Owies\";\r",
									"\r",
									"pm.collectionVariables.set(\"type_of_food\", type_of_food);\r",
									"pm.collectionVariables.set(\"new_species_of_food\", new_species_of_food);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfFood\": \"{{type_of_food}}\",\r\n    \"newSpeciesOfFood\": \"{{new_species_of_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewSpeciesOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewSpeciesOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete species of food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany gatunek pożywienia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"speciesOfFood\": \"{{new_species_of_food}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteSpeciesOfFood",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteSpeciesOfFood"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take all types of  users roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/takeTypesOfUsersRoles",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"takeTypesOfUsersRoles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new type of user role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie utworzono nowy typ użytkownika!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_type_of_user_role = \"Rolnik\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_type_of_user_role\", new_type_of_user_role);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfUserRole\": \"{{new_type_of_user_role}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewTypeOfUserRole",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewTypeOfUserRole"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete type of user role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany typ użytkownika!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfUserRole\": \"{{new_type_of_user_role}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteTypeOfUserRole",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteTypeOfUserRole"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new reason of animal death",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano nową przyczynę śmierci zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_reason_of_animal_death = \"Zabite przez dzieki zwierzę\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_reason_of_animal_death\", new_reason_of_animal_death);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newReasonOfAnimalDeath\": \"{{new_reason_of_animal_death}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewReasonOfAnimalDeath",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewReasonOfAnimalDeath"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reason of animal death",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybraną przyczynę śmierci zwierzęcia!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reasonOfAnimalDeath\": \"{{new_reason_of_animal_death}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteReasonOfAnimalDeath",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteReasonOfAnimalDeath"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new type of join to herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano nowy typ dołączenia do stada!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_type_of_join_to_the_herd = \"Otrzymane od osoby trzeciej\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_type_of_join_to_the_herd\", new_type_of_join_to_the_herd);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfJoinToHerd\": \"{{new_type_of_join_to_the_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewTypeOfJoinToHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewTypeOfJoinToHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete type of join to herd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto typ dołączenia do stada!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfJoinToHerd\": \"{{new_type_of_join_to_the_herd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteTypeOfJoinToHerd",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteTypeOfJoinToHerd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new type of product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie dodano nowy typ produktu!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const new_type_of_product = \"Masło\";\r",
									"\r",
									"pm.collectionVariables.set(\"new_type_of_product\", new_type_of_product);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newTypeOfProduct\": \"{{new_type_of_product}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/addNewTypeOfProduct",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"addNewTypeOfProduct"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete type of product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto wybrany typ produktu!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"typeOfProduct\": \"{{new_type_of_product}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteTypeOfProduct",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteTypeOfProduct"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take list of users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/takeListOfUsers",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"takeListOfUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto konto wybranego użytkownika!\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{administrator_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userEmail\": \"{{email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/herdapi/{{api_version}}/administrators/deleteUserAccount",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"herdapi",
								"{{api_version}}",
								"administrators",
								"deleteUserAccount"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const api_version = \"v1.1\";",
					"",
					"pm.collectionVariables.set(\"api_version\", api_version);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "date",
			"value": ""
		},
		{
			"key": "name_of_herd",
			"value": ""
		},
		{
			"key": "type_of_herd",
			"value": ""
		},
		{
			"key": "animal_gender",
			"value": ""
		},
		{
			"key": "animal_weight",
			"value": ""
		},
		{
			"key": "breed_of_animal",
			"value": ""
		},
		{
			"key": "identityNumberOfAnimal",
			"value": ""
		},
		{
			"key": "join_type",
			"value": ""
		},
		{
			"key": "kinds_of_animal_array",
			"value": ""
		},
		{
			"key": "breeds_of_animal_array",
			"value": ""
		},
		{
			"key": "new_name_of_herd",
			"value": ""
		},
		{
			"key": "new_identityNumberOfAnimal",
			"value": ""
		},
		{
			"key": "new_breeds_of_animal_array",
			"value": ""
		},
		{
			"key": "new_date",
			"value": ""
		},
		{
			"key": "new_animal_weight",
			"value": ""
		},
		{
			"key": "newborn_animal_birth_date",
			"value": ""
		},
		{
			"key": "temporary_identity_number",
			"value": ""
		},
		{
			"key": "new_newborn_animal_birth_date",
			"value": ""
		},
		{
			"key": "description_of_death",
			"value": ""
		},
		{
			"key": "reason_of_death",
			"value": ""
		},
		{
			"key": "new_dead_animal_identityNumberOfAnimal",
			"value": ""
		},
		{
			"key": "new_password",
			"value": ""
		},
		{
			"key": "species_name",
			"value": ""
		},
		{
			"key": "date_of_purchased_food",
			"value": ""
		},
		{
			"key": "identity_number_of_purchased_food",
			"value": ""
		},
		{
			"key": "quantity_of_food",
			"value": ""
		},
		{
			"key": "new_quantity_of_food",
			"value": ""
		},
		{
			"key": "new_species_of_feed",
			"value": ""
		},
		{
			"key": "identity_number_of_food_used_for_herd",
			"value": ""
		},
		{
			"key": "quantity_of_food_used_for_herd",
			"value": ""
		},
		{
			"key": "administrator_token",
			"value": ""
		},
		{
			"key": "api_version",
			"value": ""
		},
		{
			"key": "new_type_of_animal",
			"value": ""
		},
		{
			"key": "Drób",
			"value": ""
		},
		{
			"key": "Kaczka",
			"value": ""
		},
		{
			"key": "new_kind_of_animal",
			"value": ""
		},
		{
			"key": "type_of_animal",
			"value": ""
		},
		{
			"key": "new_type_of_food",
			"value": ""
		},
		{
			"key": "new_species_of_food",
			"value": ""
		},
		{
			"key": "type_of_food",
			"value": ""
		},
		{
			"key": "new_type_of_user_role",
			"value": ""
		},
		{
			"key": "new_reason_of_animal_death",
			"value": ""
		},
		{
			"key": "new_type_of_join_to_the_herd",
			"value": ""
		},
		{
			"key": "new_type_of_product",
			"value": ""
		}
	]
}